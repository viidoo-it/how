[
  {
    "title": "Sprechen Sie Deutsch?",
    "slug": "mutli-language",
    "name": "mutli-language",
    "href": "/posts/mutli-language",
    "date": {
      "time": 1634904000000,
      "string": "October 22, 2021"
    },
    "excerpt": "",
    "data": {
      "title": "Sprechen Sie Deutsch?",
      "description": "I am actually an iOS and macOS developer, but during the pandemia I started my video chat related open source projects.",
      "date": "2021-10-22",
      "author": "Dirk Holtwick",
      "gravatar": "bc339f4f559452ecf5b313b0c28e4f76",
      "twitter": "@holtwick"
    },
    "content": "\nWie die meisten Menschen auf dieser Welt ist Englisch nicht meine Muttersprache und ich fühle mich sicherer, wenn ich in meiner eigenen Sprache sprechen und schreiben kann. So ist es auch mit diesem Tagebuch. Ich verfasse die Beiträge auf Deutsch und lasse sie dann automatisiert übersetzten. Die Qualität der Übersetzungen übertrifft in der Regel das, was ich selber auf Englisch zustande gebracht hätte, so ist es eine Win-Win-Situation ;)\n\nNun soll der schöne Muttersprachliche Text natürlich nicht nur als Vorlage dienen, sondern auch zur Lektüre angeboten werden. Dazu ist es zunächst nötig, dass die Website mehrsprachig gemacht wird. Dazu gibt es mehrere Möglichkeiten:\n\n1. Eine pragmatische Lösung ist, pro Sprache eine Website zu erstellen, die dann z.B. über eine eigene Sub-Domain veröffentlicht wird, also `en.example.com` und `de.example.com`\n2. Die andere Methode ist, jeweils eigene Seiten pro Sprache zu erzeugen. Übersichtlich gelingt das durch entsprechende Pfade zu den Dokumenten, also `/en/my-page` und `/de/my-page`\n\nDie zweite Variante ist meine bevorzugte. Neben den Beiträgen muss aber auch das ganze Drumherum sprachlich angepasst werden.\n"
  },
  {
    "title": "Dear Diary",
    "slug": "welcome",
    "name": "welcome",
    "href": "/posts/welcome",
    "date": {
      "time": 1634904000000,
      "string": "October 22, 2021"
    },
    "excerpt": "",
    "data": {
      "title": "Dear Diary",
      "description": "In everyday life as a software developer, there are always those moments when you get the feeling: This is so exciting right now, maybe it could interest others, too.",
      "date": "2021-10-22",
      "author": "Dirk Holtwick",
      "gravatar": "bc339f4f559452ecf5b313b0c28e4f76",
      "twitter": "@holtwick"
    },
    "content": "\nIn everyday life as a software developer, there are always those moments when you get the feeling: _\"This is so exciting right now, maybe it could interest others, too.\"_ Not least because part of a developer's job is to hear from other developers how they solved problems and what gained their focus recently.\n\nFor example, I've been very excited about [vite](https://vitejs.dev/) and [vue](https://v3.vuejs.org/). After many years of mostly developing software for macOS and iOS, I was tired of the narrow world of Apple and their development environment with Xcode and Swift / Objective-C. So what could be more obvious than to look for a new lively platform that is also not limited to one operating system: _the web_!\n\nNow, not everything is rosy sunshine there either and some things don't always have the quality I would wish for. But this is where the innovations take place in the area of new development patterns, which are then transferred to other platforms. Most recently, this was well seen with SwiftUI, which uses the experiences and thought patterns of React and Vue.\n\nDevelopment must also be fun, and unfortunately this is quickly lost when there is a lot of time to spend waiting on compilation. This is the case with Xcode, but it was also the case in the Javascript world with Webpack and others. [vite](https://vitejs.dev/) on the other hand brought a paradigm shift, because it is so fast that it is hardly noticeable. Changes to the code appear immediately in the web app. It does make a difference when it's fast, because the playfulness returns, allowing new things to emerge.\n\nEven when it comes to development environments, Xcode isn't as great as it likes to pretend to be. VSCode and IntelliJ offer features that you can only dream of in Xcode, and especially in areas that are not directly related to development. Plugins that already existed in Xcode in [better flexibility](https://github.com/holtwick/HOStringSense-for-Xcode) are the salt in the soup in the other IDEs.\n\nSo I close the first entry in this developer diary and would like to go further in depth on certain selected topics in the next articles. Because as with a real diary, what is written down is sometimes also a treasure trove and inspiration for later projects. In this sense, happy coding.\n\n(Source code of this blog is available at [Github](https://github.com/viidoo-it/how))\n"
  }
]